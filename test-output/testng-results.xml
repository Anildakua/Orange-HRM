<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="13" passed="11" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-04-01T15:53:04 IST" name="Suite" finished-at="2025-04-01T15:54:22 IST" duration-ms="77393">
    <groups>
    </groups>
    <test started-at="2025-04-01T15:53:04 IST" name="Test" finished-at="2025-04-01T15:54:22 IST" duration-ms="77393">
      <class name="TestScripts.LeaveBalance">
        <test-method signature="login()[pri:0, instance:TestScripts.LeaveBalance@6200f9cb]" started-at="2025-04-01T15:53:42 IST" name="login" finished-at="2025-04-01T15:53:42 IST" duration-ms="391" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:TestScripts.LeaveBalance@6200f9cb]" started-at="2025-04-01T15:53:42 IST" name="beforeMethod" finished-at="2025-04-01T15:53:42 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:TestScripts.LeaveBalance@6200f9cb]" started-at="2025-04-01T15:53:42 IST" name="beforeClass" finished-at="2025-04-01T15:53:42 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:TestScripts.LeaveBalance@6200f9cb]" started-at="2025-04-01T15:53:42 IST" name="afterMethod" finished-at="2025-04-01T15:53:42 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:TestScripts.LeaveBalance@6200f9cb]" started-at="2025-04-01T15:53:42 IST" name="beforeMethod" finished-at="2025-04-01T15:53:42 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="leave()[pri:1, instance:TestScripts.LeaveBalance@6200f9cb]" started-at="2025-04-01T15:53:42 IST" name="leave" finished-at="2025-04-01T15:53:53 IST" duration-ms="10298" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- leave -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:TestScripts.LeaveBalance@6200f9cb]" started-at="2025-04-01T15:53:53 IST" name="afterClass" finished-at="2025-04-01T15:53:53 IST" duration-ms="832" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:TestScripts.LeaveBalance@6200f9cb]" started-at="2025-04-01T15:53:53 IST" name="afterMethod" finished-at="2025-04-01T15:53:53 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestScripts.LeaveBalance -->
      <class name="TestScripts.SanctionLeave">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:TestScripts.SanctionLeave@69453e37]" started-at="2025-04-01T15:54:01 IST" name="beforeClass" finished-at="2025-04-01T15:54:01 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="login()[pri:0, instance:TestScripts.SanctionLeave@69453e37]" started-at="2025-04-01T15:54:01 IST" name="login" finished-at="2025-04-01T15:54:01 IST" duration-ms="389" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:TestScripts.SanctionLeave@69453e37]" started-at="2025-04-01T15:54:01 IST" name="beforeMethod" finished-at="2025-04-01T15:54:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="leave()[pri:1, instance:TestScripts.SanctionLeave@69453e37]" started-at="2025-04-01T15:54:01 IST" name="leave" finished-at="2025-04-01T15:54:15 IST" duration-ms="14293" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//button[@class='oxd-button oxd-button--medium oxd-button--label-success oxd-table-cell-action-space']"}
  (Session info: chrome=134.0.6998.178)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.28.0', revision: 'ac342546e9'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [7dc35c210d2ddaa9cf8c91f56bda748d, findElement {using=xpath, value=//button[@class='oxd-button oxd-button--medium oxd-button--label-success oxd-table-cell-action-space']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 134.0.6998.178, chrome: {chromedriverVersion: 134.0.6998.165 (fd886e2cb29..., userDataDir: C:\Windows\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:63535}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:63535/devtoo..., se:cdpVersion: 134.0.6998.178, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7dc35c210d2ddaa9cf8c91f56bda748d]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//button[@class='oxd-button oxd-button--medium oxd-button--label-success oxd-table-cell-action-space']"}
  (Session info: chrome=134.0.6998.178)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.28.0', revision: 'ac342546e9'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [7dc35c210d2ddaa9cf8c91f56bda748d, findElement {using=xpath, value=//button[@class='oxd-button oxd-button--medium oxd-button--label-success oxd-table-cell-action-space']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 134.0.6998.178, chrome: {chromedriverVersion: 134.0.6998.165 (fd886e2cb29..., userDataDir: C:\Windows\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:63535}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:63535/devtoo..., se:cdpVersion: 134.0.6998.178, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7dc35c210d2ddaa9cf8c91f56bda748d
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy20.click(Unknown Source)
at TestScripts.SanctionLeave.leave(SanctionLeave.java:49)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- leave -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:TestScripts.SanctionLeave@69453e37]" started-at="2025-04-01T15:54:01 IST" name="afterMethod" finished-at="2025-04-01T15:54:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:TestScripts.SanctionLeave@69453e37]" started-at="2025-04-01T15:54:01 IST" name="beforeMethod" finished-at="2025-04-01T15:54:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:TestScripts.SanctionLeave@69453e37]" started-at="2025-04-01T15:54:15 IST" name="afterMethod" finished-at="2025-04-01T15:54:15 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:TestScripts.SanctionLeave@69453e37]" started-at="2025-04-01T15:54:15 IST" name="afterClass" finished-at="2025-04-01T15:54:16 IST" duration-ms="943" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- TestScripts.SanctionLeave -->
      <class name="TestScripts.ApplyLeave">
        <test-method signature="login()[pri:0, instance:TestScripts.ApplyLeave@2002fc1d]" started-at="2025-04-01T15:53:53 IST" name="login" finished-at="2025-04-01T15:53:54 IST" duration-ms="412" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:TestScripts.ApplyLeave@2002fc1d]" started-at="2025-04-01T15:53:53 IST" name="beforeClass" finished-at="2025-04-01T15:53:53 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:TestScripts.ApplyLeave@2002fc1d]" started-at="2025-04-01T15:53:53 IST" name="beforeMethod" finished-at="2025-04-01T15:53:53 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:TestScripts.ApplyLeave@2002fc1d]" started-at="2025-04-01T15:53:54 IST" name="afterMethod" finished-at="2025-04-01T15:53:54 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="apply()[pri:1, instance:TestScripts.ApplyLeave@2002fc1d]" started-at="2025-04-01T15:53:54 IST" name="apply" finished-at="2025-04-01T15:54:00 IST" duration-ms="5957" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- apply -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:TestScripts.ApplyLeave@2002fc1d]" started-at="2025-04-01T15:53:54 IST" name="beforeMethod" finished-at="2025-04-01T15:53:54 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:TestScripts.ApplyLeave@2002fc1d]" started-at="2025-04-01T15:54:00 IST" name="afterMethod" finished-at="2025-04-01T15:54:00 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:TestScripts.ApplyLeave@2002fc1d]" started-at="2025-04-01T15:54:00 IST" name="afterClass" finished-at="2025-04-01T15:54:01 IST" duration-ms="815" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- TestScripts.ApplyLeave -->
      <class name="TestScripts.EmployeeAcc">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:TestScripts.EmployeeAcc@20d525]" started-at="2025-04-01T15:53:31 IST" name="beforeClass" finished-at="2025-04-01T15:53:31 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="login()[pri:0, instance:TestScripts.EmployeeAcc@20d525]" started-at="2025-04-01T15:53:31 IST" name="login" finished-at="2025-04-01T15:53:31 IST" duration-ms="408" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:TestScripts.EmployeeAcc@20d525]" started-at="2025-04-01T15:53:31 IST" name="beforeMethod" finished-at="2025-04-01T15:53:31 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:TestScripts.EmployeeAcc@20d525]" started-at="2025-04-01T15:53:31 IST" name="afterMethod" finished-at="2025-04-01T15:53:31 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="add_emp()[pri:1, instance:TestScripts.EmployeeAcc@20d525]" started-at="2025-04-01T15:53:31 IST" name="add_emp" finished-at="2025-04-01T15:53:40 IST" duration-ms="9120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- add_emp -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:TestScripts.EmployeeAcc@20d525]" started-at="2025-04-01T15:53:31 IST" name="beforeMethod" finished-at="2025-04-01T15:53:31 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:TestScripts.EmployeeAcc@20d525]" started-at="2025-04-01T15:53:40 IST" name="afterMethod" finished-at="2025-04-01T15:53:40 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:TestScripts.EmployeeAcc@20d525]" started-at="2025-04-01T15:53:40 IST" name="afterClass" finished-at="2025-04-01T15:53:42 IST" duration-ms="1677" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- TestScripts.EmployeeAcc -->
      <class name="TestScripts.VerifyLeave">
        <test-method signature="login()[pri:0, instance:TestScripts.VerifyLeave@6f4a47c7]" started-at="2025-04-01T15:54:16 IST" name="login" finished-at="2025-04-01T15:54:17 IST" duration-ms="456" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:TestScripts.VerifyLeave@6f4a47c7]" started-at="2025-04-01T15:54:16 IST" name="beforeClass" finished-at="2025-04-01T15:54:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:TestScripts.VerifyLeave@6f4a47c7]" started-at="2025-04-01T15:54:16 IST" name="beforeMethod" finished-at="2025-04-01T15:54:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:TestScripts.VerifyLeave@6f4a47c7]" started-at="2025-04-01T15:54:17 IST" name="afterMethod" finished-at="2025-04-01T15:54:17 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="verify()[pri:1, instance:TestScripts.VerifyLeave@6f4a47c7]" started-at="2025-04-01T15:54:17 IST" name="verify" finished-at="2025-04-01T15:54:20 IST" duration-ms="3649" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[leave not approve]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: leave not approve
at org.testng.Assert.fail(Assert.java:111)
at TestScripts.VerifyLeave.verify(VerifyLeave.java:57)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verify -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:TestScripts.VerifyLeave@6f4a47c7]" started-at="2025-04-01T15:54:17 IST" name="beforeMethod" finished-at="2025-04-01T15:54:17 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:TestScripts.VerifyLeave@6f4a47c7]" started-at="2025-04-01T15:54:21 IST" name="afterMethod" finished-at="2025-04-01T15:54:21 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:TestScripts.VerifyLeave@6f4a47c7]" started-at="2025-04-01T15:54:21 IST" name="afterClass" finished-at="2025-04-01T15:54:21 IST" duration-ms="912" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- TestScripts.VerifyLeave -->
      <class name="TestScripts.AdminAcc">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:TestScripts.AdminAcc@38afe297]" started-at="2025-04-01T15:53:04 IST" name="beforeTest" finished-at="2025-04-01T15:53:08 IST" duration-ms="3940" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:TestScripts.AdminAcc@38afe297]" started-at="2025-04-01T15:53:08 IST" name="beforeClass" finished-at="2025-04-01T15:53:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="login()[pri:0, instance:TestScripts.AdminAcc@38afe297]" started-at="2025-04-01T15:53:08 IST" name="login" finished-at="2025-04-01T15:53:09 IST" duration-ms="474" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:TestScripts.AdminAcc@38afe297]" started-at="2025-04-01T15:53:08 IST" name="beforeMethod" finished-at="2025-04-01T15:53:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:TestScripts.AdminAcc@38afe297]" started-at="2025-04-01T15:53:09 IST" name="afterMethod" finished-at="2025-04-01T15:53:09 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:TestScripts.AdminAcc@38afe297]" started-at="2025-04-01T15:53:09 IST" name="beforeMethod" finished-at="2025-04-01T15:53:09 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="add_emp()[pri:1, instance:TestScripts.AdminAcc@38afe297]" started-at="2025-04-01T15:53:09 IST" name="add_emp" finished-at="2025-04-01T15:53:23 IST" duration-ms="14586" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- add_emp -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:TestScripts.AdminAcc@38afe297]" started-at="2025-04-01T15:53:23 IST" name="afterMethod" finished-at="2025-04-01T15:53:23 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="userCredential()[pri:2, instance:TestScripts.AdminAcc@38afe297]" started-at="2025-04-01T15:53:23 IST" name="userCredential" finished-at="2025-04-01T15:53:30 IST" duration-ms="6402" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userCredential -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:TestScripts.AdminAcc@38afe297]" started-at="2025-04-01T15:53:23 IST" name="beforeMethod" finished-at="2025-04-01T15:53:23 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:TestScripts.AdminAcc@38afe297]" started-at="2025-04-01T15:53:30 IST" name="afterMethod" finished-at="2025-04-01T15:53:30 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:TestScripts.AdminAcc@38afe297]" started-at="2025-04-01T15:53:30 IST" name="afterClass" finished-at="2025-04-01T15:53:31 IST" duration-ms="875" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:TestScripts.AdminAcc@38afe297]" started-at="2025-04-01T15:54:21 IST" name="afterTest" finished-at="2025-04-01T15:54:22 IST" duration-ms="140" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- TestScripts.AdminAcc -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
